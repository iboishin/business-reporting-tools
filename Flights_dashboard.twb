<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20182.18.0627.2230                               -->
<workbook source-build='2018.2.0 (20182.18.0627.2230)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <SortTagCleanup />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='basetable' inline='true' name='federated.1pnlbjq1fwvji71eympzr086dhdo' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='basetable' name='stat-direct.0orf3w30kgag1p14evksw0355prq'>
            <connection class='stat-direct' directory='C:/Users/iboishin/Documents/GitHub/business-reporting-tools' encoding-error-limit='' filename='basetable.sas7bdat' password='' server='' source-charset='' />
          </named-connection>
        </named-connections>
        <relation connection='stat-direct.0orf3w30kgag1p14evksw0355prq' name='basetable.sas7bdat' table='[basetable.sas7bdat]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>obs</remote-name>
            <remote-type>5</remote-type>
            <local-name>[obs]</local-name>
            <parent-name>[basetable.sas7bdat]</parent-name>
            <remote-alias>obs</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>5</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[basetable.sas7bdat]</parent-name>
            <remote-alias>year</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>month</remote-name>
            <remote-type>5</remote-type>
            <local-name>[month]</local-name>
            <parent-name>[basetable.sas7bdat]</parent-name>
            <remote-alias>month</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>day</remote-name>
            <remote-type>5</remote-type>
            <local-name>[day]</local-name>
            <parent-name>[basetable.sas7bdat]</parent-name>
            <remote-alias>day</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dep_time</remote-name>
            <remote-type>5</remote-type>
            <local-name>[dep_time]</local-name>
            <parent-name>[basetable.sas7bdat]</parent-name>
            <remote-alias>dep_time</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sched_dep_time</remote-name>
            <remote-type>5</remote-type>
            <local-name>[sched_dep_time]</local-name>
            <parent-name>[basetable.sas7bdat]</parent-name>
            <remote-alias>sched_dep_time</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dep_delay</remote-name>
            <remote-type>5</remote-type>
            <local-name>[dep_delay]</local-name>
            <parent-name>[basetable.sas7bdat]</parent-name>
            <remote-alias>dep_delay</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>arr_time</remote-name>
            <remote-type>5</remote-type>
            <local-name>[arr_time]</local-name>
            <parent-name>[basetable.sas7bdat]</parent-name>
            <remote-alias>arr_time</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sched_arr_time</remote-name>
            <remote-type>5</remote-type>
            <local-name>[sched_arr_time]</local-name>
            <parent-name>[basetable.sas7bdat]</parent-name>
            <remote-alias>sched_arr_time</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>arr_delay</remote-name>
            <remote-type>5</remote-type>
            <local-name>[arr_delay]</local-name>
            <parent-name>[basetable.sas7bdat]</parent-name>
            <remote-alias>arr_delay</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>carrier</remote-name>
            <remote-type>129</remote-type>
            <local-name>[carrier]</local-name>
            <parent-name>[basetable.sas7bdat]</parent-name>
            <remote-alias>carrier</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>flight</remote-name>
            <remote-type>5</remote-type>
            <local-name>[flight]</local-name>
            <parent-name>[basetable.sas7bdat]</parent-name>
            <remote-alias>flight</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tailnum</remote-name>
            <remote-type>129</remote-type>
            <local-name>[tailnum]</local-name>
            <parent-name>[basetable.sas7bdat]</parent-name>
            <remote-alias>tailnum</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>origin</remote-name>
            <remote-type>129</remote-type>
            <local-name>[origin]</local-name>
            <parent-name>[basetable.sas7bdat]</parent-name>
            <remote-alias>origin</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dest</remote-name>
            <remote-type>129</remote-type>
            <local-name>[dest]</local-name>
            <parent-name>[basetable.sas7bdat]</parent-name>
            <remote-alias>dest</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>air_time</remote-name>
            <remote-type>5</remote-type>
            <local-name>[air_time]</local-name>
            <parent-name>[basetable.sas7bdat]</parent-name>
            <remote-alias>air_time</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>distance</remote-name>
            <remote-type>5</remote-type>
            <local-name>[distance]</local-name>
            <parent-name>[basetable.sas7bdat]</parent-name>
            <remote-alias>distance</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hour_sched_dep</remote-name>
            <remote-type>5</remote-type>
            <local-name>[hour_sched_dep]</local-name>
            <parent-name>[basetable.sas7bdat]</parent-name>
            <remote-alias>hour_sched_dep</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>minute_sched_dep</remote-name>
            <remote-type>5</remote-type>
            <local-name>[minute_sched_dep]</local-name>
            <parent-name>[basetable.sas7bdat]</parent-name>
            <remote-alias>minute_sched_dep</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time_hour</remote-name>
            <remote-type>129</remote-type>
            <local-name>[time_hour]</local-name>
            <parent-name>[basetable.sas7bdat]</parent-name>
            <remote-alias>time_hour</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>airline_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[airline_name]</local-name>
            <parent-name>[basetable.sas7bdat]</parent-name>
            <remote-alias>airline_name</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[name]</local-name>
            <parent-name>[basetable.sas7bdat]</parent-name>
            <remote-alias>name</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lat</remote-name>
            <remote-type>5</remote-type>
            <local-name>[lat]</local-name>
            <parent-name>[basetable.sas7bdat]</parent-name>
            <remote-alias>lat</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lon</remote-name>
            <remote-type>5</remote-type>
            <local-name>[lon]</local-name>
            <parent-name>[basetable.sas7bdat]</parent-name>
            <remote-alias>lon</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>alt</remote-name>
            <remote-type>5</remote-type>
            <local-name>[alt]</local-name>
            <parent-name>[basetable.sas7bdat]</parent-name>
            <remote-alias>alt</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tz</remote-name>
            <remote-type>5</remote-type>
            <local-name>[tz]</local-name>
            <parent-name>[basetable.sas7bdat]</parent-name>
            <remote-alias>tz</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dst</remote-name>
            <remote-type>129</remote-type>
            <local-name>[dst]</local-name>
            <parent-name>[basetable.sas7bdat]</parent-name>
            <remote-alias>dst</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tzone</remote-name>
            <remote-type>129</remote-type>
            <local-name>[tzone]</local-name>
            <parent-name>[basetable.sas7bdat]</parent-name>
            <remote-alias>tzone</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year_man</remote-name>
            <remote-type>5</remote-type>
            <local-name>[year_man]</local-name>
            <parent-name>[basetable.sas7bdat]</parent-name>
            <remote-alias>year_man</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[type]</local-name>
            <parent-name>[basetable.sas7bdat]</parent-name>
            <remote-alias>type</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>manufacturer</remote-name>
            <remote-type>129</remote-type>
            <local-name>[manufacturer]</local-name>
            <parent-name>[basetable.sas7bdat]</parent-name>
            <remote-alias>manufacturer</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>model</remote-name>
            <remote-type>129</remote-type>
            <local-name>[model]</local-name>
            <parent-name>[basetable.sas7bdat]</parent-name>
            <remote-alias>model</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>engines</remote-name>
            <remote-type>5</remote-type>
            <local-name>[engines]</local-name>
            <parent-name>[basetable.sas7bdat]</parent-name>
            <remote-alias>engines</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>seats</remote-name>
            <remote-type>5</remote-type>
            <local-name>[seats]</local-name>
            <parent-name>[basetable.sas7bdat]</parent-name>
            <remote-alias>seats</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>engine</remote-name>
            <remote-type>129</remote-type>
            <local-name>[engine]</local-name>
            <parent-name>[basetable.sas7bdat]</parent-name>
            <remote-alias>engine</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hour</remote-name>
            <remote-type>5</remote-type>
            <local-name>[hour]</local-name>
            <parent-name>[basetable.sas7bdat]</parent-name>
            <remote-alias>hour</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>temp</remote-name>
            <remote-type>5</remote-type>
            <local-name>[temp]</local-name>
            <parent-name>[basetable.sas7bdat]</parent-name>
            <remote-alias>temp</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dewp</remote-name>
            <remote-type>5</remote-type>
            <local-name>[dewp]</local-name>
            <parent-name>[basetable.sas7bdat]</parent-name>
            <remote-alias>dewp</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>humid</remote-name>
            <remote-type>5</remote-type>
            <local-name>[humid]</local-name>
            <parent-name>[basetable.sas7bdat]</parent-name>
            <remote-alias>humid</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>wind_dir</remote-name>
            <remote-type>5</remote-type>
            <local-name>[wind_dir]</local-name>
            <parent-name>[basetable.sas7bdat]</parent-name>
            <remote-alias>wind_dir</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>wind_speed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[wind_speed]</local-name>
            <parent-name>[basetable.sas7bdat]</parent-name>
            <remote-alias>wind_speed</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>wind_gust</remote-name>
            <remote-type>5</remote-type>
            <local-name>[wind_gust]</local-name>
            <parent-name>[basetable.sas7bdat]</parent-name>
            <remote-alias>wind_gust</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>precip</remote-name>
            <remote-type>5</remote-type>
            <local-name>[precip]</local-name>
            <parent-name>[basetable.sas7bdat]</parent-name>
            <remote-alias>precip</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pressure</remote-name>
            <remote-type>5</remote-type>
            <local-name>[pressure]</local-name>
            <parent-name>[basetable.sas7bdat]</parent-name>
            <remote-alias>pressure</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>visib</remote-name>
            <remote-type>5</remote-type>
            <local-name>[visib]</local-name>
            <parent-name>[basetable.sas7bdat]</parent-name>
            <remote-alias>visib</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Mi_per_hr</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Mi_per_hr]</local-name>
            <parent-name>[basetable.sas7bdat]</parent-name>
            <remote-alias>Mi_per_hr</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Mi per hr' datatype='real' name='[Mi_per_hr]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Air Time' datatype='real' name='[air_time]' role='measure' type='quantitative' />
      <column caption='Airline Name' datatype='string' name='[airline_name]' role='dimension' type='nominal' />
      <column caption='Alt' datatype='real' name='[alt]' role='measure' type='quantitative' />
      <column caption='Arr Delay' datatype='real' name='[arr_delay]' role='measure' type='quantitative' />
      <column caption='Arr Time' datatype='real' name='[arr_time]' role='measure' type='quantitative' />
      <column caption='Carrier' datatype='string' name='[carrier]' role='dimension' type='nominal' />
      <column caption='Day' datatype='real' name='[day]' role='dimension' type='quantitative' />
      <column caption='Dep Delay' datatype='real' name='[dep_delay]' role='measure' type='quantitative' />
      <column caption='Dep Time' datatype='real' name='[dep_time]' role='measure' type='quantitative' />
      <column caption='Dest' datatype='string' name='[dest]' role='dimension' type='nominal' />
      <column caption='Dewp' datatype='real' name='[dewp]' role='measure' type='quantitative' />
      <column caption='Distance' datatype='real' name='[distance]' role='measure' type='quantitative' />
      <column caption='Dst' datatype='string' name='[dst]' role='dimension' type='nominal' />
      <column caption='Engine' datatype='string' name='[engine]' role='dimension' type='nominal' />
      <column caption='Engines' datatype='real' name='[engines]' role='measure' type='quantitative' />
      <column caption='Flight' datatype='real' name='[flight]' role='measure' type='quantitative' />
      <column caption='Hour' datatype='real' name='[hour]' role='measure' type='quantitative' />
      <column caption='Hour Sched Dep' datatype='real' name='[hour_sched_dep]' role='measure' type='quantitative' />
      <column caption='Humid' datatype='real' name='[humid]' role='measure' type='quantitative' />
      <column aggregation='Avg' caption='Lat' datatype='real' name='[lat]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='Lon' datatype='real' name='[lon]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Manufacturer' datatype='string' name='[manufacturer]' role='dimension' type='nominal' />
      <column caption='Minute Sched Dep' datatype='real' name='[minute_sched_dep]' role='measure' type='quantitative' />
      <column caption='Model' datatype='string' name='[model]' role='dimension' type='nominal' />
      <column caption='Month' datatype='real' name='[month]' role='dimension' type='quantitative' />
      <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
      <column caption='Obs' datatype='real' name='[obs]' role='measure' type='quantitative' />
      <column caption='Origin' datatype='string' name='[origin]' role='dimension' type='nominal' />
      <column caption='Precip' datatype='real' name='[precip]' role='measure' type='quantitative' />
      <column caption='Pressure' datatype='real' name='[pressure]' role='measure' type='quantitative' />
      <column caption='Sched Arr Time' datatype='real' name='[sched_arr_time]' role='measure' type='quantitative' />
      <column caption='Sched Dep Time' datatype='real' name='[sched_dep_time]' role='measure' type='quantitative' />
      <column caption='Seats' datatype='real' name='[seats]' role='measure' type='quantitative' />
      <column caption='Tailnum' datatype='string' name='[tailnum]' role='dimension' type='nominal' />
      <column caption='Temp' datatype='real' name='[temp]' role='measure' type='quantitative' />
      <column caption='Time Hour' datatype='string' name='[time_hour]' role='dimension' type='nominal' />
      <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal' />
      <column caption='Tz' datatype='real' name='[tz]' role='measure' type='quantitative' />
      <column caption='Tzone' datatype='string' name='[tzone]' role='dimension' type='nominal' />
      <column caption='Visib' datatype='real' name='[visib]' role='measure' type='quantitative' />
      <column caption='Wind Dir' datatype='real' name='[wind_dir]' role='measure' type='quantitative' />
      <column caption='Wind Gust' datatype='real' name='[wind_gust]' role='measure' type='quantitative' />
      <column caption='Wind Speed' datatype='real' name='[wind_speed]' role='measure' type='quantitative' />
      <column caption='Year' datatype='real' name='[year]' role='dimension' type='quantitative' />
      <column caption='Year Man' datatype='real' name='[year_man]' role='dimension' type='quantitative' />
      <column-instance column='[arr_delay]' derivation='Avg' name='[avg:arr_delay:qk]' pivot='key' type='quantitative' />
      <column-instance column='[dep_delay]' derivation='Avg' name='[avg:dep_delay:qk]' pivot='key' type='quantitative' />
      <column-instance column='[tailnum]' derivation='Count' name='[cnt:tailnum:qk]' pivot='key' type='quantitative' />
      <column-instance column='[arr_delay]' derivation='Max' name='[max:arr_delay:qk]' pivot='key' type='quantitative' />
      <column-instance column='[dep_delay]' derivation='Max' name='[max:dep_delay:qk]' pivot='key' type='quantitative' />
      <column-instance column='[arr_delay]' derivation='None' name='[none:arr_delay:qk]' pivot='key' type='quantitative' />
      <column-instance column='[dep_delay]' derivation='None' name='[none:dep_delay:qk]' pivot='key' type='quantitative' />
      <column-instance column='[tailnum]' derivation='None' name='[none:tailnum:nk]' pivot='key' type='nominal' />
      <column-instance column='[arr_delay]' derivation='Sum' name='[sum:arr_delay:qk]' pivot='key' type='quantitative' />
      <column-instance column='[dep_delay]' derivation='Sum' name='[sum:dep_delay:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.490222' measure-ordering='alphabetic' measure-percentage='0.509778' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1pnlbjq1fwvji71eympzr086dhdo].[avg:arr_delay:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1pnlbjq1fwvji71eympzr086dhdo].[cnt:tailnum:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1pnlbjq1fwvji71eympzr086dhdo].[none:arr_delay:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1pnlbjq1fwvji71eympzr086dhdo].[none:tailnum:nk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1pnlbjq1fwvji71eympzr086dhdo].[max:dep_delay:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1pnlbjq1fwvji71eympzr086dhdo].[sum:dep_delay:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1pnlbjq1fwvji71eympzr086dhdo].[max:arr_delay:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1pnlbjq1fwvji71eympzr086dhdo].[sum:arr_delay:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1pnlbjq1fwvji71eympzr086dhdo].[avg:dep_delay:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1pnlbjq1fwvji71eympzr086dhdo].[none:dep_delay:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='delay_by_origin' inline='true' name='federated.01yyapj06396jq1cdhrn30a9nv5m' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='delay_by_origin' name='stat-direct.12ghnfw193dg8x14esryb08m8ri6'>
            <connection class='stat-direct' directory='C:/Users/iboishin/Documents/GitHub/business-reporting-tools' encoding-error-limit='' filename='delay_by_origin.sas7bdat' password='' server='' source-charset='' />
          </named-connection>
        </named-connections>
        <relation connection='stat-direct.12ghnfw193dg8x14esryb08m8ri6' name='delay_by_origin.sas7bdat' table='[delay_by_origin.sas7bdat]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>airport_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[airport_name]</local-name>
            <parent-name>[delay_by_origin.sas7bdat]</parent-name>
            <remote-alias>airport_name</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>arr_delay</remote-name>
            <remote-type>5</remote-type>
            <local-name>[arr_delay]</local-name>
            <parent-name>[delay_by_origin.sas7bdat]</parent-name>
            <remote-alias>arr_delay</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dep_delay</remote-name>
            <remote-type>5</remote-type>
            <local-name>[dep_delay]</local-name>
            <parent-name>[delay_by_origin.sas7bdat]</parent-name>
            <remote-alias>dep_delay</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Airport Name' datatype='string' name='[airport_name]' role='dimension' type='nominal' />
      <column caption='Arr Delay' datatype='integer' datatype-customized='true' name='[arr_delay]' role='measure' type='quantitative' />
      <column caption='Dep Delay' datatype='integer' datatype-customized='true' name='[dep_delay]' role='measure' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.473273' measure-ordering='alphabetic' measure-percentage='0.526727' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Delay Over Time'>
      <table>
        <view>
          <datasources>
            <datasource caption='basetable' name='federated.1pnlbjq1fwvji71eympzr086dhdo' />
          </datasources>
          <datasource-dependencies datasource='federated.1pnlbjq1fwvji71eympzr086dhdo'>
            <column caption='Arr Delay' datatype='real' name='[arr_delay]' role='measure' type='quantitative' />
            <column-instance column='[arr_delay]' derivation='Avg' name='[avg:arr_delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[dep_delay]' derivation='Avg' name='[avg:dep_delay:qk]' pivot='key' type='quantitative' />
            <column caption='Dep Delay' datatype='real' name='[dep_delay]' role='measure' type='quantitative' />
            <column caption='Month' datatype='real' name='[month]' role='dimension' type='quantitative' />
            <column-instance column='[month]' derivation='None' name='[none:month:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1pnlbjq1fwvji71eympzr086dhdo].[avg:dep_delay:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <encoding attr='space' class='0' field='[federated.1pnlbjq1fwvji71eympzr086dhdo].[none:month:qk]' field-type='quantitative' major-origin='0.0' major-spacing='1.0' scope='cols' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1pnlbjq1fwvji71eympzr086dhdo].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1pnlbjq1fwvji71eympzr086dhdo].[avg:arr_delay:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1pnlbjq1fwvji71eympzr086dhdo].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1pnlbjq1fwvji71eympzr086dhdo].[avg:dep_delay:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1pnlbjq1fwvji71eympzr086dhdo].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1pnlbjq1fwvji71eympzr086dhdo].[avg:arr_delay:qk] + [federated.1pnlbjq1fwvji71eympzr086dhdo].[avg:dep_delay:qk])</rows>
        <cols>[federated.1pnlbjq1fwvji71eympzr086dhdo].[none:month:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Delay Over Time by Airline'>
      <table>
        <view>
          <datasources>
            <datasource caption='basetable' name='federated.1pnlbjq1fwvji71eympzr086dhdo' />
          </datasources>
          <datasource-dependencies datasource='federated.1pnlbjq1fwvji71eympzr086dhdo'>
            <column caption='Airline Name' datatype='string' name='[airline_name]' role='dimension' type='nominal' />
            <column caption='Arr Delay' datatype='real' name='[arr_delay]' role='measure' type='quantitative' />
            <column caption='Dep Delay' datatype='real' name='[dep_delay]' role='measure' type='quantitative' />
            <column caption='Month' datatype='real' name='[month]' role='dimension' type='quantitative' />
            <column-instance column='[airline_name]' derivation='None' name='[none:airline_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[month]' derivation='None' name='[none:month:qk]' pivot='key' type='quantitative' />
            <column-instance column='[arr_delay]' derivation='Sum' name='[sum:arr_delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[dep_delay]' derivation='Sum' name='[sum:dep_delay:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1pnlbjq1fwvji71eympzr086dhdo].[none:month:qk]' field-type='quantitative' major-origin='0.0' major-spacing='1.0' scope='cols' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1pnlbjq1fwvji71eympzr086dhdo].[none:airline_name:nk]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1pnlbjq1fwvji71eympzr086dhdo].[sum:arr_delay:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1pnlbjq1fwvji71eympzr086dhdo].[none:airline_name:nk]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1pnlbjq1fwvji71eympzr086dhdo].[sum:dep_delay:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1pnlbjq1fwvji71eympzr086dhdo].[none:airline_name:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1pnlbjq1fwvji71eympzr086dhdo].[sum:arr_delay:qk] + [federated.1pnlbjq1fwvji71eympzr086dhdo].[sum:dep_delay:qk])</rows>
        <cols>[federated.1pnlbjq1fwvji71eympzr086dhdo].[none:month:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Delay Spread by Airline'>
      <table>
        <view>
          <datasources>
            <datasource caption='basetable' name='federated.1pnlbjq1fwvji71eympzr086dhdo' />
          </datasources>
          <datasource-dependencies datasource='federated.1pnlbjq1fwvji71eympzr086dhdo'>
            <column caption='Airline Name' datatype='string' name='[airline_name]' role='dimension' type='nominal' />
            <column caption='Dep Delay' datatype='real' name='[dep_delay]' role='measure' type='quantitative' />
            <column-instance column='[airline_name]' derivation='None' name='[none:airline_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[dep_delay]' derivation='None' name='[none:dep_delay:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1pnlbjq1fwvji71eympzr086dhdo].[none:airline_name:nk]'>
            <groupfilter function='member' level='[none:airline_name:nk]' member='&quot;Mesa Airlines Inc.&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1pnlbjq1fwvji71eympzr086dhdo].[none:airline_name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.1pnlbjq1fwvji71eympzr086dhdo].[none:airline_name:nk]' value='0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <reference-line axis-column='[federated.1pnlbjq1fwvji71eympzr086dhdo].[none:dep_delay:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.1pnlbjq1fwvji71eympzr086dhdo].[none:dep_delay:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1pnlbjq1fwvji71eympzr086dhdo].[none:airline_name:nk]</rows>
        <cols>[federated.1pnlbjq1fwvji71eympzr086dhdo].[none:dep_delay:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Delay by Airline'>
      <table>
        <view>
          <datasources>
            <datasource caption='basetable' name='federated.1pnlbjq1fwvji71eympzr086dhdo' />
          </datasources>
          <datasource-dependencies datasource='federated.1pnlbjq1fwvji71eympzr086dhdo'>
            <column caption='Airline Name' datatype='string' name='[airline_name]' role='dimension' type='nominal' />
            <column caption='Arr Delay' datatype='real' name='[arr_delay]' role='measure' type='quantitative' />
            <column-instance column='[arr_delay]' derivation='Avg' name='[avg:arr_delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[dep_delay]' derivation='Avg' name='[avg:dep_delay:qk]' pivot='key' type='quantitative' />
            <column caption='Dep Delay' datatype='real' name='[dep_delay]' role='measure' type='quantitative' />
            <column-instance column='[airline_name]' derivation='None' name='[none:airline_name:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1pnlbjq1fwvji71eympzr086dhdo].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pnlbjq1fwvji71eympzr086dhdo].[avg:dep_delay:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pnlbjq1fwvji71eympzr086dhdo].[avg:arr_delay:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1pnlbjq1fwvji71eympzr086dhdo].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1pnlbjq1fwvji71eympzr086dhdo].[avg:dep_delay:qk]&quot;</bucket>
              <bucket>&quot;[federated.1pnlbjq1fwvji71eympzr086dhdo].[avg:arr_delay:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1pnlbjq1fwvji71eympzr086dhdo].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1pnlbjq1fwvji71eympzr086dhdo].[Multiple Values]' scope='cols' value='Average Delay in Minutes' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.1pnlbjq1fwvji71eympzr086dhdo].[:Measure Names]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1pnlbjq1fwvji71eympzr086dhdo].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1pnlbjq1fwvji71eympzr086dhdo].[none:airline_name:nk] / [federated.1pnlbjq1fwvji71eympzr086dhdo].[:Measure Names])</rows>
        <cols>[federated.1pnlbjq1fwvji71eympzr086dhdo].[Multiple Values]</cols>
      </table>
    </worksheet>
    <worksheet name='Delay by Departure Time'>
      <table>
        <view>
          <datasources>
            <datasource caption='basetable' name='federated.1pnlbjq1fwvji71eympzr086dhdo' />
          </datasources>
          <datasource-dependencies datasource='federated.1pnlbjq1fwvji71eympzr086dhdo'>
            <column caption='Arr Delay' datatype='real' name='[arr_delay]' role='measure' type='quantitative' />
            <column-instance column='[arr_delay]' derivation='Avg' name='[avg:arr_delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[dep_delay]' derivation='Avg' name='[avg:dep_delay:qk]' pivot='key' type='quantitative' />
            <column caption='Dep Delay' datatype='real' name='[dep_delay]' role='measure' type='quantitative' />
            <column caption='Hour Sched Dep' datatype='real' name='[hour_sched_dep]' role='measure' type='quantitative' />
            <column-instance column='[hour_sched_dep]' derivation='None' name='[none:hour_sched_dep:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1pnlbjq1fwvji71eympzr086dhdo].[avg:dep_delay:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1pnlbjq1fwvji71eympzr086dhdo].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1pnlbjq1fwvji71eympzr086dhdo].[avg:arr_delay:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1pnlbjq1fwvji71eympzr086dhdo].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1pnlbjq1fwvji71eympzr086dhdo].[avg:dep_delay:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1pnlbjq1fwvji71eympzr086dhdo].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1pnlbjq1fwvji71eympzr086dhdo].[avg:arr_delay:qk] + [federated.1pnlbjq1fwvji71eympzr086dhdo].[avg:dep_delay:qk])</rows>
        <cols>[federated.1pnlbjq1fwvji71eympzr086dhdo].[none:hour_sched_dep:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Delay by Destination'>
      <table>
        <view>
          <datasources>
            <datasource caption='basetable' name='federated.1pnlbjq1fwvji71eympzr086dhdo' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1pnlbjq1fwvji71eympzr086dhdo'>
            <column caption='Arr Delay' datatype='real' name='[arr_delay]' role='measure' type='quantitative' />
            <column-instance column='[arr_delay]' derivation='Avg' name='[avg:arr_delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[tailnum]' derivation='Count' name='[cnt:tailnum:qk]' pivot='key' type='quantitative' />
            <column aggregation='Avg' caption='Lat' datatype='real' name='[lat]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Lon' datatype='real' name='[lon]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column-instance column='[lat]' derivation='None' name='[none:lat:qk]' pivot='key' type='quantitative' />
            <column-instance column='[lon]' derivation='None' name='[none:lon:qk]' pivot='key' type='quantitative' />
            <column caption='Tailnum' datatype='string' name='[tailnum]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1pnlbjq1fwvji71eympzr086dhdo].[none:lon:qk]' field-type='quantitative' max='-6300618.2745558377' min='-15726204.07915926' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1pnlbjq1fwvji71eympzr086dhdo].[none:lat:qk]' field-type='quantitative' max='7236938.448206732' min='1892320.5633986369' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size' field='[federated.1pnlbjq1fwvji71eympzr086dhdo].[avg:arr_delay:qk]' field-type='quantitative' max-size='1' min-size='0.00720891' type='quantsize' />
            <encoding attr='color' field='[federated.1pnlbjq1fwvji71eympzr086dhdo].[avg:arr_delay:qk]' num-steps='6' palette='red_green_diverging_10_0' reverse='true' type='interpolated' />
            <encoding attr='size' field='[federated.1pnlbjq1fwvji71eympzr086dhdo].[cnt:tailnum:qk]' field-type='quantitative' max-size='1' min-size='0' type='quantsize' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1pnlbjq1fwvji71eympzr086dhdo].[avg:arr_delay:qk]' value='Avg. Delay in Minnutes'>
              <formatted-text>
                <run>Avg. Delay in Minnutes</run>
              </formatted-text>
            </format>
            <format attr='size' field='[federated.1pnlbjq1fwvji71eympzr086dhdo].[cnt:tailnum:qk]' value='Number of Flights'>
              <formatted-text>
                <run>Number of Flights</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1pnlbjq1fwvji71eympzr086dhdo].[avg:arr_delay:qk]' />
              <size column='[federated.1pnlbjq1fwvji71eympzr086dhdo].[cnt:tailnum:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.8982962965965271' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1pnlbjq1fwvji71eympzr086dhdo].[none:lat:qk]</rows>
        <cols>[federated.1pnlbjq1fwvji71eympzr086dhdo].[none:lon:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Delay by Origin'>
      <table>
        <view>
          <datasources>
            <datasource caption='basetable' name='federated.1pnlbjq1fwvji71eympzr086dhdo' />
          </datasources>
          <datasource-dependencies datasource='federated.1pnlbjq1fwvji71eympzr086dhdo'>
            <column caption='Dep Delay' datatype='real' name='[dep_delay]' role='measure' type='quantitative' />
            <column-instance column='[dep_delay]' derivation='None' name='[none:dep_delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[origin]' derivation='None' name='[none:origin:nk]' pivot='key' type='nominal' />
            <column caption='Origin' datatype='string' name='[origin]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <lod column='[federated.1pnlbjq1fwvji71eympzr086dhdo].[none:origin:nk]' />
            </encodings>
            <reference-line axis-column='[federated.1pnlbjq1fwvji71eympzr086dhdo].[none:dep_delay:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline1' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.1pnlbjq1fwvji71eympzr086dhdo].[none:dep_delay:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1pnlbjq1fwvji71eympzr086dhdo].[none:origin:nk]</rows>
        <cols>[federated.1pnlbjq1fwvji71eympzr086dhdo].[none:dep_delay:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Delay by Wind'>
      <table>
        <view>
          <datasources>
            <datasource caption='basetable' name='federated.1pnlbjq1fwvji71eympzr086dhdo' />
          </datasources>
          <datasource-dependencies datasource='federated.1pnlbjq1fwvji71eympzr086dhdo'>
            <column caption='Arr Delay' datatype='real' name='[arr_delay]' role='measure' type='quantitative' />
            <column-instance column='[arr_delay]' derivation='Avg' name='[avg:arr_delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[dep_delay]' derivation='Avg' name='[avg:dep_delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[wind_speed]' derivation='Count' name='[cnt:wind_speed:qk]' pivot='key' type='quantitative' />
            <column caption='Dep Delay' datatype='real' name='[dep_delay]' role='measure' type='quantitative' />
            <column-instance column='[wind_speed]' derivation='None' name='[none:wind_speed:qk]' pivot='key' type='quantitative' />
            <column caption='Wind Speed' datatype='real' name='[wind_speed]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1pnlbjq1fwvji71eympzr086dhdo].[avg:dep_delay:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1pnlbjq1fwvji71eympzr086dhdo].[:Measure Names]' />
              <lod column='[federated.1pnlbjq1fwvji71eympzr086dhdo].[cnt:wind_speed:qk]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1pnlbjq1fwvji71eympzr086dhdo].[avg:arr_delay:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1pnlbjq1fwvji71eympzr086dhdo].[:Measure Names]' />
              <lod column='[federated.1pnlbjq1fwvji71eympzr086dhdo].[cnt:wind_speed:qk]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1pnlbjq1fwvji71eympzr086dhdo].[avg:dep_delay:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1pnlbjq1fwvji71eympzr086dhdo].[:Measure Names]' />
              <lod column='[federated.1pnlbjq1fwvji71eympzr086dhdo].[cnt:wind_speed:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1pnlbjq1fwvji71eympzr086dhdo].[avg:arr_delay:qk] + [federated.1pnlbjq1fwvji71eympzr086dhdo].[avg:dep_delay:qk])</rows>
        <cols>[federated.1pnlbjq1fwvji71eympzr086dhdo].[none:wind_speed:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Delay_Two'>
      <table>
        <view>
          <datasources>
            <datasource caption='basetable' name='federated.1pnlbjq1fwvji71eympzr086dhdo' />
          </datasources>
          <datasource-dependencies datasource='federated.1pnlbjq1fwvji71eympzr086dhdo'>
            <column caption='Airline Name' datatype='string' name='[airline_name]' role='dimension' type='nominal' />
            <column caption='Arr Delay' datatype='real' name='[arr_delay]' role='measure' type='quantitative' />
            <column-instance column='[arr_delay]' derivation='Avg' name='[avg:arr_delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[dep_delay]' derivation='Avg' name='[avg:dep_delay:qk]' pivot='key' type='quantitative' />
            <column caption='Dep Delay' datatype='real' name='[dep_delay]' role='measure' type='quantitative' />
            <column-instance column='[airline_name]' derivation='None' name='[none:airline_name:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1pnlbjq1fwvji71eympzr086dhdo].[avg:dep_delay:qk]' scope='cols' value='Avgerage Departure Delay in Minutes' />
            <format attr='title' class='0' field='[federated.1pnlbjq1fwvji71eympzr086dhdo].[avg:arr_delay:qk]' scope='cols' value='Avgerage Arrival Delay in Minutes' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1pnlbjq1fwvji71eympzr086dhdo].[avg:arr_delay:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1pnlbjq1fwvji71eympzr086dhdo].[avg:dep_delay:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1pnlbjq1fwvji71eympzr086dhdo].[none:airline_name:nk]</rows>
        <cols>([federated.1pnlbjq1fwvji71eympzr086dhdo].[avg:dep_delay:qk] + [federated.1pnlbjq1fwvji71eympzr086dhdo].[avg:arr_delay:qk])</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Airline'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='basetable' name='federated.1pnlbjq1fwvji71eympzr086dhdo' />
      </datasources>
      <datasource-dependencies datasource='federated.1pnlbjq1fwvji71eympzr086dhdo'>
        <column caption='Airline Name' datatype='string' name='[airline_name]' role='dimension' type='nominal' />
        <column-instance column='[airline_name]' derivation='None' name='[none:airline_name:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='5' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='3' type='layout-basic' w='82400' x='800' y='1000'>
              <zone h='98000' id='1' name='Delay Spread by Airline' w='82400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98000' id='4' is-fixed='true' param='vert' type='layout-flow' w='16000' x='83200' y='1000'>
              <zone h='6500' id='6' mode='dropdown' name='Delay Spread by Airline' param='[federated.1pnlbjq1fwvji71eympzr086dhdo].[none:airline_name:nk]' type='filter' values='database' w='16000' x='83200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Destination'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='5' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='3' type='layout-basic' w='82400' x='800' y='1000'>
              <zone h='98000' id='1' name='Delay by Destination' w='82400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98000' id='4' is-fixed='true' param='vert' type='layout-flow' w='16000' x='83200' y='1000'>
              <zone h='8125' id='6' name='Delay by Destination' pane-specification-id='0' param='[federated.1pnlbjq1fwvji71eympzr086dhdo].[avg:arr_delay:qk]' type='color' w='16000' x='83200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='13250' id='7' name='Delay by Destination' pane-specification-id='0' param='[federated.1pnlbjq1fwvji71eympzr086dhdo].[cnt:tailnum:qk]' type='size' w='16000' x='83200' y='9125'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Origin'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='1' name='Delay by Origin' w='98400' x='800' y='1000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Plane Type'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones />
    </dashboard>
    <dashboard name='Story 1' type='storyboard'>
      <style />
      <size maxheight='964' maxwidth='1016' minheight='964' minwidth='1016' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98340' id='1' param='vert' removable='false' type='layout-flow' w='98426' x='787' y='830'>
            <zone h='3423' id='3' type='title' w='98426' x='787' y='830' />
            <zone h='10477' id='4' is-fixed='true' paired-zone-id='5' removable='false' type='flipboard-nav' w='98426' x='787' y='4253' />
            <zone h='84440' id='5' paired-zone-id='4' removable='false' type='flipboard' w='98426' x='787' y='14730'>
              <flipboard active-id='3' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point captured-sheet='Delay Over Time' id='1' />
                  <story-point captured-sheet='Plane Type' id='2' />
                  <story-point captured-sheet='Destination' id='3'>
                    <currentDeltas>
                      <worksheet name='Delay by Destination'>
                        <selection-collection />
                      </worksheet>
                    </currentDeltas>
                    <capturedDeltas />
                  </story-point>
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Time'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='5' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='3' type='layout-basic' w='82400' x='800' y='1000'>
              <zone h='98000' id='1' name='Delay by Departure Time' w='82400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98000' id='4' is-fixed='true' param='vert' type='layout-flow' w='16000' x='83200' y='1000'>
              <zone h='8250' id='6' name='Delay by Departure Time' pane-specification-id='1' param='[federated.1pnlbjq1fwvji71eympzr086dhdo].[:Measure Names]' type='color' w='16000' x='83200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Weather'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='5' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='3' type='layout-basic' w='82400' x='800' y='1000'>
              <zone h='98000' id='1' name='Delay by Wind' w='82400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98000' id='4' is-fixed='true' param='vert' type='layout-flow' w='16000' x='83200' y='1000'>
              <zone h='8250' id='6' name='Delay by Wind' pane-specification-id='1' param='[federated.1pnlbjq1fwvji71eympzr086dhdo].[:Measure Names]' type='color' w='16000' x='83200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='51'>
    <window class='worksheet' name='Delay by Airline'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1pnlbjq1fwvji71eympzr086dhdo].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Delay_Two'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Delay Over Time by Airline'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1pnlbjq1fwvji71eympzr086dhdo].[none:airline_name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Delay Spread by Airline'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Delay Over Time'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1pnlbjq1fwvji71eympzr086dhdo].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Delay by Wind'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1pnlbjq1fwvji71eympzr086dhdo].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Delay by Departure Time'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1pnlbjq1fwvji71eympzr086dhdo].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Delay by Destination'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1pnlbjq1fwvji71eympzr086dhdo].[avg:arr_delay:qk]' type='color' />
            <card pane-specification-id='0' param='[federated.1pnlbjq1fwvji71eympzr086dhdo].[cnt:tailnum:qk]' type='size' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Delay by Origin'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='dashboard' name='Airline'>
      <viewpoints>
        <viewpoint name='Delay Spread by Airline' />
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='dashboard' name='Weather'>
      <viewpoints>
        <viewpoint name='Delay by Wind'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='1' />
    </window>
    <window class='dashboard' name='Plane Type'>
      <viewpoints />
      <active id='-1' />
    </window>
    <window class='dashboard' name='Destination'>
      <viewpoints>
        <viewpoint name='Delay by Destination'>
          <zoom type='entire-view' />
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.1pnlbjq1fwvji71eympzr086dhdo].[none:lon:qk]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.1pnlbjq1fwvji71eympzr086dhdo].[none:lat:qk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.1pnlbjq1fwvji71eympzr086dhdo].[avg:arr_delay:qk]</field>
                    <field>[federated.1pnlbjq1fwvji71eympzr086dhdo].[cnt:tailnum:qk]</field>
                    <field>[federated.1pnlbjq1fwvji71eympzr086dhdo].[none:lat:qk]</field>
                    <field>[federated.1pnlbjq1fwvji71eympzr086dhdo].[none:lon:qk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>11.7351830569693</value>
                  <value>6333</value>
                  <value>36.124471999999997</value>
                  <value>-86.678194000000005</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
          <default-map-tool-selection tool='1' />
        </viewpoint>
      </viewpoints>
      <active id='6' />
    </window>
    <window class='dashboard' name='Origin'>
      <viewpoints>
        <viewpoint name='Delay by Origin' />
      </viewpoints>
      <active id='1' />
    </window>
    <window class='dashboard' name='Time'>
      <viewpoints>
        <viewpoint name='Delay by Departure Time'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='1' />
    </window>
    <window class='dashboard' maximized='true' name='Story 1'>
      <viewpoints />
      <active id='-1' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Airline' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Delay by Departure Time' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Delay by Destination' width='192'>
      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
      run/Ac7v0TWkeiZsAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='139' name='Delay by Origin' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Destination' width='192'>
      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
      XeEB0U0CgP8BCrJyG1xfeckAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Origin' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Story 1' width='192'>
      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
      +L4v+7Zugv8DwN1fR6BOjf4AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Time' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Weather' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
